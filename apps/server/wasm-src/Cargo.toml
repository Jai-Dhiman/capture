[package]
name = "capture-wasm"
version = "0.1.0"
authors = ["JaiDhiman <jaidhiman2000@gmail.com>"]
edition = "2018"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook"]

[dependencies]
wasm-bindgen = "0.2.84"
nalgebra = { version = "0.32.2", default-features = false, features = ["std"] }
ndarray = "0.15.6"
js-sys = "0.3.60"
web-sys = { version = "0.3.60", features = ["console"] }
serde = { version = "1.0", features = ["derive"] }
serde-wasm-bindgen = "0.4"

# Image processing dependencies
image = { version = "0.24.5", default-features = false, features = ["jpeg", "png", "webp"] }
imageproc = "0.23.0"
kamadak-exif = "0.5.5"
base64 = "0.21.0"

# Cryptographic dependencies
ring = "0.16.20"
sha2 = "0.10.6"
hmac = "0.12.1"
hex = "0.4.3"
rand = { version = "0.8.5", features = ["getrandom"] }
getrandom = { version = "0.2.8", features = ["js"] }

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.7", optional = true }

[dev-dependencies]
wasm-bindgen-test = "0.3.34"

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"

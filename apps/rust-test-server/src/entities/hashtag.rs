//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.12

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "hashtag")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false, column_type = "Text")]
    pub id: String,
    #[sea_orm(column_type = "Text", unique)]
    pub name: String,
    #[sea_orm(column_type = "custom(\"numeric\")")]
    pub created_at: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    // #[sea_orm(has_many = "super::draft_post_hashtag::Entity")] // Disabled - missing entity
    // DraftPostHashtag,
    // #[sea_orm(has_many = "super::post_hashtag::Entity")] // Disabled - missing entity
    // PostHashtag,
}

// impl Related<super::draft_post_hashtag::Entity> for Entity {
//     fn to() -> RelationDef {
//         Relation::DraftPostHashtag.def()
//     }
// }

// impl Related<super::post_hashtag::Entity> for Entity {
//     fn to() -> RelationDef {
//         Relation::PostHashtag.def()
//     }
// }

impl ActiveModelBehavior for ActiveModel {}

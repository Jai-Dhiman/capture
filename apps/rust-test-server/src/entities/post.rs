//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.12

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "post")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false, column_type = "Text")]
    pub id: String,
    #[sea_orm(column_type = "Text")]
    pub user_id: String,
    #[sea_orm(column_type = "Text")]
    pub content: String,
    #[sea_orm(column_type = "Text")]
    pub r#type: String,
    pub is_draft: i32,
    #[sea_orm(column_type = "Text", nullable)]
    pub editing_metadata: Option<String>,
    pub version: i32,
    #[sea_orm(column_type = "custom(\"numeric\")")]
    pub created_at: String,
    #[sea_orm(column_type = "custom(\"numeric\")")]
    pub updated_at: String,
    #[sea_orm(column_name = "_save_count")]
    pub save_count: i32,
    #[sea_orm(column_name = "_comment_count")]
    pub comment_count: i32,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::comment::Entity")]
    Comment,
    #[sea_orm(has_many = "super::media::Entity")]
    Media,
    // #[sea_orm(has_many = "super::post_hashtag::Entity")] // Disabled - missing entity
    // PostHashtag,
    #[sea_orm(has_many = "super::post_like::Entity")]
    PostLike,
    #[sea_orm(has_many = "super::post_version_history::Entity")]
    PostVersionHistory,
    #[sea_orm(has_many = "super::saved_posts::Entity")]
    SavedPosts,
    // #[sea_orm(has_many = "super::seen_post_log::Entity")] // Disabled - missing entity
    // SeenPostLog,
    #[sea_orm(
        belongs_to = "super::users::Entity",
        from = "Column::UserId",
        to = "super::users::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Users,
}

impl Related<super::comment::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Comment.def()
    }
}

impl Related<super::media::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Media.def()
    }
}

// impl Related<super::post_hashtag::Entity> for Entity {
//     fn to() -> RelationDef {
//         Relation::PostHashtag.def()
//     }
// }

impl Related<super::post_like::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::PostLike.def()
    }
}

impl Related<super::post_version_history::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::PostVersionHistory.def()
    }
}

impl Related<super::saved_posts::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::SavedPosts.def()
    }
}

// impl Related<super::seen_post_log::Entity> for Entity {
//     fn to() -> RelationDef {
//         Relation::SeenPostLog.def()
//     }
// }

impl Related<super::users::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Users.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
